# Video Processing Pipeline Requirements
# Main dependencies for the complete video processing project

# Core Dependencies
# ================

# PyTorch ecosystem - core for both video processing and transcription
torch>=2.0.0
torchvision>=0.15.0
numpy>=1.24.0

# Image and video processing
Pillow>=9.0.0
packaging>=21.0

# HTTP requests and utilities
requests>=2.28.0

# Video Processing Backends
# =========================

# Optional but recommended video backends (install separately if needed)
# decord>=0.6.0        # Uncomment for additional video backend
# av>=10.0.0           # Uncomment for PyAV backend support

# TikTok Downloader Dependencies
# ==============================

# Video downloading
yt-dlp>=2023.12.30

# Audio processing
ffmpeg-python>=0.2.0

# AI/ML for transcription (shared with video processor)
transformers>=4.35.0
accelerate>=0.24.0

# Pyannote audio for speaker diarization
pyannote.audio>=3.1.0

# Audio processing utilities
librosa>=0.10.0
soundfile>=0.12.0

# Optional audio enhancement
noisereduce>=3.0.0

# Development and Testing (Optional)
# ==================================

# Uncomment the following for development:
# pytest>=7.0.0
# pytest-cov>=4.0.0
# black>=22.0.0
# flake8>=5.0.0
# mypy>=1.0.0

# Jupyter notebook support (optional)
# jupyter>=1.0.0
# ipywidgets>=8.0.0

# Installation Notes:
# ==================
# 
# 1. For video processing only (without TikTok features):
#    pip install torch torchvision pillow numpy requests packaging
#
# 2. For TikTok downloading only (without video processor):
#    cd tt_video_download && pip install -r requirements.txt
#
# 3. For full functionality:
#    pip install -r requirements.txt
#
# 4. Additional backends (optional):
#    pip install decord av
#
# 5. FFmpeg system dependency:
#    - Ubuntu/Debian: sudo apt install ffmpeg
#    - macOS: brew install ffmpeg
#    - Conda: conda install -c conda-forge ffmpeg
#
# 6. GPU acceleration:
#    - CUDA: Install PyTorch with CUDA support
#    - Apple Silicon: Included in standard PyTorch
#
# 7. For Pyannote speaker diarization:
#    - Accept user agreement at: https://huggingface.co/pyannote/speaker-diarization
#    - Get HuggingFace token from: https://huggingface.co/settings/tokens